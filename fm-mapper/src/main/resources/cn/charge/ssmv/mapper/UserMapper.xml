<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.charge.ssmv.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.charge.ssmv.domain.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="identity" property="identity" jdbcType="VARCHAR" />
    <result column="depart_in" property="departIn" jdbcType="VARCHAR" />
    <result column="entry_time" property="entryTime" jdbcType="TIMESTAMP" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="birth" property="birth" jdbcType="DATE" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="state" property="state"  />
  </resultMap>

  <insert id="insert" parameterType="cn.charge.ssmv.domain.User" useGeneratedKeys="true" keyProperty="id" >
    insert into t_user (user_name, password, real_name, 
      identity, depart_in, entry_time, 
      telephone, education, address, 
      sex, birth, remarks, state
      )
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{identity,jdbcType=VARCHAR}, #{departIn,jdbcType=VARCHAR}, #{entryTime,jdbcType=TIMESTAMP}, 
      #{telephone,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{birth,jdbcType=DATE}, #{remarks,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}
      )
  </insert>

  <update id="updateByPrimaryKey" parameterType="cn.charge.ssmv.domain.User" >
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=VARCHAR},
      depart_in = #{departIn,jdbcType=VARCHAR},
      entry_time = #{entryTime,jdbcType=TIMESTAMP},
      telephone = #{telephone,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birth = #{birth,jdbcType=DATE},
      remarks = #{remarks,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, user_name, password, real_name, identity, depart_in, entry_time, telephone, 
    education, address, sex, birth, remarks, state
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <sql id="base_where">
    <where>
      <if test="keyword != null">
        and ( user_name like concat("%",#{keyword},"%") or real_name like concat("%",#{keyword},"%") )
      </if>
    </where>

  </sql>

  <select id="selectAllForList" resultMap="BaseResultMap" >
    select id, user_name, password, real_name, identity, depart_in, entry_time, telephone,
    education, address, sex, birth, remarks, state
    from t_user
    <include refid="base_where" />
  </select>

  <select id="findOneByName" resultMap="BaseResultMap" parameterType="string">
  select id, user_name, password, real_name, identity, depart_in, entry_time, telephone,
  education, address, sex, birth, remarks, state
  from t_user
  where user_name = #{userName}
</select>

    <select id="selectAll" resultMap="BaseResultMap" >
    select id, user_name, password, real_name, identity, depart_in, entry_time, telephone,
    education, address, sex, birth, remarks, state
    from t_user
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
</mapper>